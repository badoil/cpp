// 문제
// 역사, 그 중에서도 한국사에 해박한 세준이는 많은 역사적 사건들의 전후 관계를 잘 알고 있다. 즉, 임진왜란이 병자호란보다 먼저 일어났으며, 무오사화가 기묘사화보다 먼저 일어났다는 등의 지식을 알고 있는 것이다.
// 세준이가 알고 있는 일부 사건들의 전후 관계들이 주어질 때, 주어진 사건들의 전후 관계도 알 수 있을까? 이를 해결하는 프로그램을 작성해 보도록 하자.

// 입력
// 첫째 줄에 첫 줄에 사건의 개수 n(400 이하의 자연수)과 알고 있는 사건의 전후 관계의 개수 k(50,000 이하의 자연수)가 주어진다. 
// 다음 k줄에는 전후 관계를 알고 있는 두 사건의 번호가 주어진다. 이는 앞에 있는 번호의 사건이 뒤에 있는 번호의 사건보다 먼저 일어났음을 의미한다. 
// 물론 사건의 전후 관계가 모순인 경우는 없다. 다음에는 사건의 전후 관계를 알고 싶은 사건 쌍의 수 s(50,000 이하의 자연수)이 주어진다. 
// 다음 s줄에는 각각 서로 다른 두 사건의 번호가 주어진다. 사건의 번호는 1보다 크거나 같고, N보다 작거나 같은 자연수이다.

// 출력
// s줄에 걸쳐 물음에 답한다. 각 줄에 만일 앞에 있는 번호의 사건이 먼저 일어났으면 -1, 뒤에 있는 번호의 사건이 먼저 일어났으면 1, 어떤지 모르면(유추할 수 없으면) 0을 출력한다.

#include <bits/stdc++.h>
using namespace std;

int n, k, a, b, s, x, y, dist[404][404];


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n >> k;
    for (int i=0; i<k; i++) {
        cin >> a >> b;
        dist[a][b] = -1;
        dist[b][a] = 1;
    }

    for (int k=1; k<=n; k++) {
        for (int i=1; i<=n; i++) {
            for (int j=1; j<=n; j++) {
                if (dist[i][k]==1 && dist[k][j]==1) dist[i][j] = 1;             // 플로이드워셜 응용           
                else if(dist[i][k]==-1 && dist[k][j]==-1) dist[i][j] = -1;
            }
        }
    }
    
    cin >> s;
    for (int i=0; i<s; i++) {
        cin >> x >> y;
        cout << dist[x][y] << "\n";
    }
    return 0;
}


// 플로이드워셜 응용문제
// 플로이드워셜은 모든 지점에서 지점으로 최단경로 구하는 문제
// 따라서 모든 사건들 사이의 전후관계를 구할 수 있는것