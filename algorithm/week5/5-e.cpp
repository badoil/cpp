// 문제
// 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 
// 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 
// 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

// 입력
// 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다. 
// 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.

// 출력
// 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.

#include<bits/stdc++.h>
using namespace std;


int n, from, to, ret = 1;
vector<pair<int, int>> v;

int main () {
    cin >> n;

    for (int i=0; i<n; i++) {
        cin >> from >> to;
        v.push_back({to, from});
    }
    sort(v.begin(), v.end());

    int from = v[0].second;
    int to = v[0].first;
    for (int i=1; i<v.size(); i++) {    // i=0 인 경우는 포문 전에 할당했으므로 1부터
        if (to > v[i].second) continue;     // 회의 시간이 겹치면 버림
        from = v[i].second;
        to = v[i].first;
        ret++;
    }

    cout << ret << "\n";
    return 0;
}


// 이 문제는 라인스위핑 문제
// 하지만 각 회의가 겹치면 안됨
// 겹치는 회의는 버려야됨
// 이를 위해서 회의가 끝나는 시간 to 를 기준으로 정렬한 것임